        -:    0:Source:C:/Github_Repos/DisenioBJAM/Prototipo/json_testbench/Comeca/Managers/Src/caliperManager.c
        -:    0:Graph:C:\Github_Repos\DisenioBJAM\Prototipo\json_testbench\cmake-build-debug-coverage\CMakeFiles\json_testbench.dir\Comeca\Managers\Src\caliperManager.c.gcno
        -:    0:Data:C:\Github_Repos\DisenioBJAM\Prototipo\json_testbench\cmake-build-debug-coverage\CMakeFiles\json_testbench.dir\Comeca\Managers\Src\caliperManager.c.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1://
        -:    2:// Created by joa-m on 11/1/2021.
        -:    3://
        -:    4:#include "../../../Comeca/Managers/Inc/caliperManager.h"
        -:    5:
        -:    6:#ifdef TESTING
        -:    7:
        -:    8:
        -:    9:// this should come from "digimatic.h"
function digimaticGetMeasureFrames called 5 returned 100% blocks executed 100%
        5:   10:digimatic_frame_t* digimaticGetMeasureFrames(caliper_number curr_caliper){
        5:   10-block  0
        5:   11:    return NULL;
        5:   11-block  0
        -:   12:}
        -:   13:// this should come from "digimatic.h"
function digimaticMeasure called 2 returned 100% blocks executed 100%
        2:   14:digimatic_measure_t digimaticMeasure(digimatic_frame_t* digimaticFrame){
        2:   14-block  0
        2:   15:    return getDigimaticMeasure();
        2:   15-block  0
call    0 returned 2
        -:   16:}
        -:   17:// this should come from "digimatic.h"
function validCaliperMeasure called 5 returned 100% blocks executed 100%
        5:   18:bool validCaliperMeasure(digimatic_frame_t* digimaticFrame){
        5:   18-block  0
        5:   19:    return getIsValidCaliperMeasure();
        5:   19-block  0
call    0 returned 5
        -:   20:}
        -:   21:
        -:   22:#endif
        -:   23:
function caliperManager called 3 returned 100% blocks executed 100%
        3:   24:void caliperManager(caliper_number caliperNumber){
        3:   24-block  0
        -:   25:    int retry;
        3:   26:    bool isValid = false;
        -:   27:    digimatic_frame_t* digimaticFrames;
        6:   28:    for(retry = 0; retry< RETRY_TIMES; retry++){
        3:   28-block  0
        3:   28-block  1
        6:   28-block  2
branch  0 taken 5
branch  1 taken 1 (fallthrough)
        5:   29:        digimaticFrames = digimaticGetMeasureFrames(caliperNumber);
        5:   29-block  0
call    0 returned 5
        5:   30:        isValid = validCaliperMeasure(digimaticFrames);
call    0 returned 5
        5:   31:        if(isValid) break;
branch  0 taken 2 (fallthrough)
branch  1 taken 3
        2:   31-block  0
        -:   32:    }
        -:   33:
        3:   34:    if(isValid){
        3:   34-block  0
branch  0 taken 2 (fallthrough)
branch  1 taken 1
        2:   35:    	digimatic_measure_t measure = digimaticMeasure(digimaticFrames);
        2:   35-block  0
call    0 returned 2
        2:   36:    	sendCaliperMeasure(measure, caliperNumber);
call    0 returned 2
        -:   37:    } else {
        1:   38:    	sendCaliperWarning(caliperNumber);
        1:   38-block  0
call    0 returned 1
        -:   39:    }
        -:   40:
        3:   41:}
