        -:    0:Source:C:/Github_Repos/DisenioBJAM/Prototipo/json_testbench/Comeca/Messages/Receive/Src/jsonGetter.c
        -:    0:Graph:C:\Github_Repos\DisenioBJAM\Prototipo\json_testbench\cmake-build-debug-coverage\CMakeFiles\json_testbench.dir\Comeca\Messages\Receive\Src\jsonGetter.c.gcno
        -:    0:Data:C:\Github_Repos\DisenioBJAM\Prototipo\json_testbench\cmake-build-debug-coverage\CMakeFiles\json_testbench.dir\Comeca\Messages\Receive\Src\jsonGetter.c.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1://
        -:    2:// Created by joa-m on 11/1/2021.
        -:    3://
        -:    4:
        -:    5:#include "../Inc/jsonGetter.h"
        -:    6:
        -:    7:// free all! :)
        -:    8:
function getFrameType called 5 returned 100% blocks executed 100%
        5:    9:void getFrameType(message_t json, char* frameTypePtr){
        5:    9-block  0
        5:   10:    struct json_value_s* root = json_parse(json.msg, json.len);
        5:   10-block  0
call    0 returned 5
        5:   11:    struct json_object_s* object = (struct json_object_s*)root->payload;
        5:   12:    const char * frameType = ((struct json_string_s*)object->start->value->payload)->string;
        5:   13:    strcpy(frameTypePtr, frameType);
        5:   14:    free(root);
        5:   15:}
        -:   16:
function getInputNumber called 3 returned 100% blocks executed 100%
        3:   17:int getInputNumber(message_t json){
        3:   17-block  0
        3:   18:    struct json_value_s* root = json_parse(json.msg, json.len);
        3:   18-block  0
call    0 returned 3
        3:   19:    struct json_object_s* object = (struct json_object_s*)root->payload;
        3:   20:    int inputNum = atoi(json_value_as_number(object->start->next->value)->number);
call    0 returned 3
call    1 returned 3
        3:   21:    free(root);
        3:   22:    return inputNum;
        -:   23:}
        -:   24:
function getOutputNum called 2 returned 100% blocks executed 100%
        2:   25:int getOutputNum(message_t json){
        2:   25-block  0
        2:   26:    struct json_value_s* root = json_parse(json.msg, json.len);
        2:   26-block  0
call    0 returned 2
        2:   27:    struct json_object_s* object = (struct json_object_s*)root->payload;
        2:   28:    struct json_object_element_s* frameType = object->start;
        2:   29:    int outputNum = atoi(json_value_as_number(frameType->next->value)->number);
call    0 returned 2
call    1 returned 2
        2:   30:    free(root);
        2:   31:    return outputNum;
        -:   32:}
function getOutputState called 2 returned 100% blocks executed 100%
        2:   33:void getOutputState(message_t json, char* outputStatePtr){
        2:   33-block  0
        2:   34:    struct json_value_s* root = json_parse(json.msg, json.len);
        2:   34-block  0
call    0 returned 2
        2:   35:    struct json_object_s* object = (struct json_object_s*)root->payload;
        2:   36:    struct json_object_element_s* frameType = object->start;
        2:   37:    const char * outputState = json_value_as_string(frameType->next->next->value)->string;
call    0 returned 2
        2:   38:    strcpy(outputStatePtr, outputState);
        2:   39:    free(root);
        2:   40:}
