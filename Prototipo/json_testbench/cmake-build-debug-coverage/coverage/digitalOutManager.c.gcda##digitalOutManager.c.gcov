        -:    0:Source:C:/Github_Repos/DisenioBJAM/Prototipo/json_testbench/Comeca/Managers/Src/digitalOutManager.c
        -:    0:Graph:C:\Github_Repos\DisenioBJAM\Prototipo\json_testbench\cmake-build-debug-coverage\CMakeFiles\json_testbench.dir\Comeca\Managers\Src\digitalOutManager.c.gcno
        -:    0:Data:C:\Github_Repos\DisenioBJAM\Prototipo\json_testbench\cmake-build-debug-coverage\CMakeFiles\json_testbench.dir\Comeca\Managers\Src\digitalOutManager.c.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1://
        -:    2:// Created by joa-m on 11/1/2021.
        -:    3://
        -:    4:#include "../../../Comeca/Managers/Inc/digitalOutManager.h"
        -:    5:
        -:    6:
        -:    7:#ifdef TESTING
function turnOn called 1 returned 100% blocks executed 100%
        1:    8:void turnOn(int outputNum){
        1:    8-block  0
        1:    9:    sprintf(getTestBench(),"ON->%d", outputNum);
        1:    9-block  0
call    0 returned 1
        1:   10:    printf(getTestBench());
call    0 returned 1
call    1 returned 1
        1:   11:    printf("\n");
call    0 returned 1
        1:   12:}
function turnOff called 1 returned 100% blocks executed 100%
        1:   13:void turnOff(int outputNum){
        1:   13-block  0
        1:   14:    sprintf(getTestBench(),"OFF->%d", outputNum);
        1:   14-block  0
call    0 returned 1
        1:   15:    printf(getTestBench());
call    0 returned 1
call    1 returned 1
        1:   16:    printf("\n");
call    0 returned 1
        1:   17:}
        -:   18:
        -:   19:#else
        -:   20:
        -:   21:// SALIDAS DIGITALES
        -:   22:// {PC9, PC7, PD15, PD13}
        -:   23:GPIO_TypeDef* outputGpioPortMapping[] = {GPIOC,GPIOC,GPIOD,GPIOD};
        -:   24:uint16_t outputGpioPinMapping[] = {GPIO_PIN_9,GPIO_PIN_7,GPIO_PIN_15,GPIO_PIN_13};
        -:   25:
        -:   26:void turnOn(int outputNum){
        -:   27:    HAL_GPIO_WritePin(outputGpioPortMapping[outputNum], outputGpioPinMapping[outputNum], GPIO_PIN_SET);
        -:   28:}
        -:   29:void turnOff(int outputNum){
        -:   30:    HAL_GPIO_WritePin(outputGpioPortMapping[outputNum], outputGpioPinMapping[outputNum], GPIO_PIN_RESET);
        -:   31:}
        -:   32:#endif
        -:   33:
function digitalOutManager called 2 returned 100% blocks executed 100%
        2:   34:void digitalOutManager(message_t json){
        2:   34-block  0
        2:   35:    int outputNum = getOutputNum(json);
        2:   35-block  0
call    0 returned 2
        -:   36:    char outputState[4];
        2:   37:    getOutputState(json, outputState);
call    0 returned 2
        -:   38:
        2:   39:    if(strcmp(outputState, "ON") == 0){
branch  0 taken 1 (fallthrough)
branch  1 taken 1
        1:   40:        turnOn(outputNum);
        1:   40-block  0
call    0 returned 1
        -:   41:    }
        2:   42:    if(strcmp(outputState, "OFF") == 0){
        2:   42-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 1
        1:   43:        turnOff(outputNum);
        1:   43-block  0
call    0 returned 1
        -:   44:    }
        2:   45:}
