        -:    0:Source:C:/Github_Repos/DisenioBJAM/Prototipo/json_testbench/Comeca/Messages/Send/Src/messageLayer.c
        -:    0:Graph:C:\Github_Repos\DisenioBJAM\Prototipo\json_testbench\cmake-build-debug-coverage\CMakeFiles\json_testbench.dir\Comeca\Messages\Send\Src\messageLayer.c.gcno
        -:    0:Data:C:\Github_Repos\DisenioBJAM\Prototipo\json_testbench\cmake-build-debug-coverage\CMakeFiles\json_testbench.dir\Comeca\Messages\Send\Src\messageLayer.c.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1://
        -:    2:// Created by joa-m on 11/1/2021.
        -:    3://
        -:    4:#include "../Inc/messageLayer.h"
        -:    5:
        -:    6:
function sendCaliperMeasure called 2 returned 100% blocks executed 100%
        2:    7:void sendCaliperMeasure(digimatic_measure_t measure, caliper_number caliperNumber){
        2:    7-block  0
        -:    8:    char str2send[GLOBAL_MAX_STRING_SIZE];
        2:    9:    int len = -1;
        2:   10:    if(measure.unit){
        2:   10-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 1
        1:   11:        len = sprintf(str2send,
        1:   11-block  0
        1:   12:        		"{\"version\": \"0.0\", \"sequence\": 0, \"command\": \"request\",  \"action\": \"guardarDatoCalibre\", \"data\": {\"caliperNumber\": %d, \"measure\": %.5f, \"unit\": \"inches\"}}",caliperNumber, measure.number);
        -:   13:    } else {
        1:   14:        len = sprintf(str2send,
        1:   14-block  0
        1:   15:        		"{\"version\": \"0.0\", \"sequence\": 0, \"command\": \"request\",  \"action\": \"guardarDatoCalibre\", \"data\": {\"caliperNumber\": %d, \"measure\": %.5f, \"unit\": \"mm\"}}",caliperNumber, measure.number);
        -:   16:    }
        -:   17:    message_t msg2send;
        2:   18:    msg2send.msg = str2send;
        2:   19:    msg2send.len = len;
        -:   20:
        2:   21:    ETHsendMessage(msg2send);
        2:   21-block  0
call    0 returned 2
        2:   22:}
        -:   23:
function sendCaliperWarning called 1 returned 100% blocks executed 100%
        1:   24:void sendCaliperWarning(caliper_number caliperNumber){
        1:   24-block  0
        -:   25:    char str2send[GLOBAL_MAX_STRING_SIZE];
        1:   26:    int len = sprintf(str2send,
        -:   27:    		"{\"version\": \"0.0\", \"sequence\": 0, \"command\": \"request\",  \"action\": \"guardarDatoCalibre\", \"data\": {\"caliperNumber\": %d, \"warning\": \"retryCaliperMeasure\"}}",caliperNumber);
        -:   28:
        -:   29:    message_t msg2send;
        1:   30:    msg2send.msg = str2send;
        1:   31:    msg2send.len = len;
        -:   32:
        1:   33:    ETHsendMessage(msg2send);
        1:   33-block  0
call    0 returned 1
        1:   34:}
        -:   35:
function sendIncrementPieceCount called 1 returned 100% blocks executed 100%
        1:   36:void sendIncrementPieceCount(void){
        1:   36-block  0
        -:   37:    char str2send[GLOBAL_MAX_STRING_SIZE];
        -:   38:
        1:   39:    int len = sprintf(str2send,
        -:   40:    		"{\"version\": \"0.0\", \"sequence\": 0, \"command\": \"request\",  \"action\": \"contarPieza\"}");
        -:   41:
        -:   42:    message_t msg2send;
        1:   43:    msg2send.msg = str2send;
        1:   44:    msg2send.len = len;
        -:   45:
        1:   46:    ETHsendMessage(msg2send);
        1:   46-block  0
call    0 returned 1
        1:   47:}
        -:   48:
function sendAnalogInMessage called 1 returned 100% blocks executed 100%
        1:   49:void sendAnalogInMessage(int inputNum, float receivedData){
        1:   49-block  0
        -:   50:    char str2send[GLOBAL_MAX_STRING_SIZE];
        -:   51:
        1:   52:    int len = sprintf(str2send,
        -:   53:    		"{\"version\": \"0.0\", \"sequence\": 0, \"command\": \"request\",  \"action\": \"guardarDatoEntradaAnalogica\", \"data\": {\"inputNumber\": %d, \"measure\": %.5f}}",inputNum, receivedData);
        -:   54:
        -:   55:    message_t msg2send;
        1:   56:    msg2send.msg = str2send;
        1:   57:    msg2send.len = len;
        -:   58:
        1:   59:    ETHsendMessage(msg2send);
        1:   59-block  0
call    0 returned 1
        1:   60:}
        -:   61:
function sendAnalogInWarning called 2 returned 100% blocks executed 100%
        2:   62:void sendAnalogInWarning(int inputNum){
        2:   62-block  0
        -:   63:    char str2send[GLOBAL_MAX_STRING_SIZE];
        -:   64:
        2:   65:	int len = sprintf(str2send,
        -:   66:    	"{\"version\": \"0.0\", \"sequence\": 0, \"command\": \"request\",  \"action\": \"guardarDatoEntradaAnalogica\", \"data\": {\"inputNumber\": %d, \"warning\": \"retryAnalogIn\"}}", inputNum);
        -:   67:
        -:   68:    message_t msg2send;
        2:   69:    msg2send.msg = str2send;
        2:   70:    msg2send.len = len;
        -:   71:
        2:   72:    ETHsendMessage(msg2send);
        2:   72-block  0
call    0 returned 2
        2:   73:}
