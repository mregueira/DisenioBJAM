        -:    0:Source:C:/Github_Repos/DisenioBJAM/Prototipo/json_testbench/utils/Src/messageLayer.c
        -:    0:Graph:C:\Github_Repos\DisenioBJAM\Prototipo\json_testbench\cmake-build-debug-coverage\CMakeFiles\json_testbench.dir\utils\Src\messageLayer.c.gcno
        -:    0:Data:C:\Github_Repos\DisenioBJAM\Prototipo\json_testbench\cmake-build-debug-coverage\CMakeFiles\json_testbench.dir\utils\Src\messageLayer.c.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1://
        -:    2:// Created by joa-m on 11/1/2021.
        -:    3://
        -:    4:#include "../Inc/messageLayer.h"
        -:    5:
function sendCaliperWarningMessage called 0 returned 0% blocks executed 0%
    #####:    6:message_t sendCaliperWarningMessage(char * str2send){
    $$$$$:    6-block  0
    #####:    7:    int len = sprintf(str2send,"{\"frameType\": \"WARNING_RETRY_CALIPER\"}");
        -:    8:    message_t msg2send;
    #####:    9:    msg2send.msg = str2send;
    #####:   10:    msg2send.len = len;
    #####:   11:    return msg2send;
    $$$$$:   11-block  0
        -:   12:};
        -:   13:
function sendCaliperMeasure called 2 returned 100% blocks executed 100%
        2:   14:message_t sendCaliperMeasure(char * str2send, digimatic_measure_t measure, caliper_number caliperNumber){
        2:   14-block  0
        2:   15:    int len = -1;
        2:   16:    if(measure.unit){
        2:   16-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 1
        1:   17:        len = sprintf(str2send,"{\"frameType\": \"SEND_CALIPER_MEASURE\",\"caliperNumber\": %d,\"data\": %.5f,\"unit\": \"inch\"}",caliperNumber, measure.number);
        1:   17-block  0
        -:   18:    } else {
        1:   19:        len = sprintf(str2send,"{\"frameType\": \"SEND_CALIPER_MEASURE\",\"caliperNumber\": %d,\"data\": %.5f,\"unit\": \"mm\"}",caliperNumber, measure.number);
        1:   19-block  0
        -:   20:    }
        -:   21:    message_t msg2send;
        2:   22:    msg2send.msg = str2send;
        2:   23:    msg2send.len = len;
        2:   24:    return msg2send;
        2:   24-block  0
        -:   25:}
        -:   26:
function sendCaliperWarning called 1 returned 100% blocks executed 100%
        1:   27:message_t sendCaliperWarning(char * str2send, caliper_number caliperNumber){
        1:   27-block  0
        1:   28:    int len = sprintf(str2send,"{\"frameType\": \"WARNING_RETRY_CALIPER\" ,\"caliperNumber\": %d}", caliperNumber);
        -:   29:    message_t msg2send;
        1:   30:    msg2send.msg = str2send;
        1:   31:    msg2send.len = len;
        1:   32:    return msg2send;
        1:   32-block  0
        -:   33:}
        -:   34:
function sendIncrementPieceCount called 1 returned 100% blocks executed 100%
        1:   35:message_t sendIncrementPieceCount(char * str2send){
        1:   35-block  0
        1:   36:    int len = sprintf(str2send,"{\"frameType\": \"INCREMENT_PIECE_COUNTER\"}");
        -:   37:    message_t msg2send;
        1:   38:    msg2send.msg = str2send;
        1:   39:    msg2send.len = len;
        1:   40:    return msg2send;
        1:   40-block  0
        -:   41:}
        -:   42:
function sendAnalogInMessage called 2 returned 100% blocks executed 100%
        2:   43:message_t sendAnalogInMessage(char * str2send, int inputNum, int receivedData, bool isValid){
        2:   43-block  0
        2:   44:    int len = -1;
        2:   45:    if(isValid){ // si es valido
        2:   45-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 1
        1:   46:        len = sprintf(str2send,"{\"frameType\": \"MEASURED_ANALOG_IN\",\"inputNumber\": %d, \"analogData\": %d}", inputNum, receivedData);
        1:   46-block  0
        -:   47:    }else{
        1:   48:        len = sprintf(str2send,"{\"frameType\": \"RETRY_ANALOG_IN\",\"inputNumber\": %d}", inputNum);
        1:   48-block  0
        -:   49:    }
        -:   50:    message_t msg2send;
        2:   51:    msg2send.msg = str2send;
        2:   52:    msg2send.len = len;
        2:   53:    return msg2send;
        2:   53-block  0
        -:   54:}
        -:   55:
