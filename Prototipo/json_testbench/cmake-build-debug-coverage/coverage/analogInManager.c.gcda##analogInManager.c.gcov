        -:    0:Source:C:/Github_Repos/DisenioBJAM/Prototipo/json_testbench/Comeca/Managers/Src/analogInManager.c
        -:    0:Graph:C:\Github_Repos\DisenioBJAM\Prototipo\json_testbench\cmake-build-debug-coverage\CMakeFiles\json_testbench.dir\Comeca\Managers\Src\analogInManager.c.gcno
        -:    0:Data:C:\Github_Repos\DisenioBJAM\Prototipo\json_testbench\cmake-build-debug-coverage\CMakeFiles\json_testbench.dir\Comeca\Managers\Src\analogInManager.c.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1://
        -:    2:// Created by joa-m on 11/1/2021.
        -:    3://
        -:    4:#include "../../../Comeca/Managers/Inc/analogInManager.h"
        -:    5:
        -:    6:
        -:    7:
        -:    8:uint8_t pTxData[1]= {ADC_CH0_MASK};
        -:    9:uint8_t pRxData[2]= {0, 0};
        -:   10:uint8_t ADC_CH[4] = {ADC_CH0_MASK, ADC_CH1_MASK, ADC_CH2_MASK, ADC_CH3_MASK};
        -:   11:
        -:   12:#ifdef TESTING
        -:   13:    // these functions should come from analogInManager.h
function readAdc called 3 returned 100% blocks executed 100%
        3:   14:    uint16_t readAdc(int inputNum){
        3:   14-block  0
        3:   15:        return getAdcMeasure();
        3:   15-block  0
call    0 returned 3
        -:   16:    }
        -:   17:#else
        -:   18:    extern SPI_HandleTypeDef hspi3;
        -:   19:    uint16_t sendADCReadRequest(int inputNum){
        -:   20:	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_4, RESET);
        -:   21:	pTxData[0]=ADC_CH[inputNum];
        -:   22:	uint32_t Timeout = HAL_MAX_DELAY;
        -:   23:	HAL_SPI_Transmit(&hspi3, pTxData, 1, Timeout);
        -:   24:	HAL_SPI_Receive(&hspi3, pRxData, 2, Timeout);
        -:   25:	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_4, SET);
        -:   26:	pRxData[0] = pRxData[0] & 0x7F;
        -:   27:	pRxData[1] = pRxData[1] >> 3;
        -:   28:
        -:   29:	return (((uint16_t)pRxData[0]) << 5) | pRxData[1];
        -:   30:}
        -:   31:#endif
        -:   32:
function analogValidate called 3 returned 100% blocks executed 100%
        3:   33:bool analogValidate(float analogData){
        3:   33-block  0
        3:   34:    return analogData <= MAX_VALID_VALUE && analogData >= MIN_VALID_VALUE;
        3:   34-block  0
branch  0 taken 2 (fallthrough)
branch  1 taken 1
        2:   34-block  1
branch  2 taken 1 (fallthrough)
branch  3 taken 1
        1:   34-block  2
        2:   34-block  3
        3:   34-block  4
        -:   35:}
        -:   36:
        -:   37:
        -:   38:
        -:   39:
function analogInManager called 3 returned 100% blocks executed 100%
        3:   40:void analogInManager(message_t json){
        3:   40-block  0
        3:   41:    int inputNum = getInputNumber(json);
        3:   41-block  0
call    0 returned 3
        -:   42:
        -:   43:#ifdef TESTING
        3:   44:    uint16_t analog_data = readAdc(inputNum);
call    0 returned 3
        -:   45:#else
        -:   46:    uint16_t analog_data = sendADCReadRequest(inputNum);
        -:   47:#endif
        3:   48:    float receivedData = (analog_data/4096.0)*(3300.0/150.0);
        -:   49:
        -:   50:
        3:   51:    bool isValid = analogValidate(receivedData);
call    0 returned 3
        -:   52:
        3:   53:    if(isValid){
branch  0 taken 1 (fallthrough)
branch  1 taken 2
        1:   54:    	sendAnalogInMessage(inputNum, receivedData);
        1:   54-block  0
call    0 returned 1
        -:   55:    } else {
        2:   56:    	sendAnalogInWarning(inputNum);
        2:   56-block  0
call    0 returned 2
        -:   57:    }
        3:   58:}
