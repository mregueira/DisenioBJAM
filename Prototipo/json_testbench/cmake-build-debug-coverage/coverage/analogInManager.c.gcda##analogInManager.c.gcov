        -:    0:Source:C:/Github_Repos/DisenioBJAM/Prototipo/json_testbench/managers/Src/analogInManager.c
        -:    0:Graph:C:\Github_Repos\DisenioBJAM\Prototipo\json_testbench\cmake-build-debug-coverage\CMakeFiles\json_testbench.dir\managers\Src\analogInManager.c.gcno
        -:    0:Data:C:\Github_Repos\DisenioBJAM\Prototipo\json_testbench\cmake-build-debug-coverage\CMakeFiles\json_testbench.dir\managers\Src\analogInManager.c.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1://
        -:    2:// Created by joa-m on 11/1/2021.
        -:    3://
        -:    4:#include "../Inc/analogInManager.h"
        -:    5:
        -:    6:#ifdef TESTING
        -:    7:    // these functions should come from analogInManager.h
function readAdc called 2 returned 100% blocks executed 100%
        2:    8:    int readAdc(int inputNum){
        2:    8-block  0
        2:    9:        return getAdcMeasure();
        2:    9-block  0
call    0 returned 2
        -:   10:    }
        -:   11:
        -:   12:#else
        -:   13:    int readAdc(int inputNum){
        -:   14:        return 100;
        -:   15:    }
        -:   16:#endif
        -:   17:
function analogValidate called 2 returned 100% blocks executed 100%
        2:   18:bool analogValidate(uint32_t analogData){
        2:   18-block  0
        2:   19:    return analogData <= MAX_VALID_VALUE && analogData >= MIN_VALID_VALUE;
        2:   19-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 1
        1:   19-block  1
branch  2 taken 1 (fallthrough)
branch  3 taken 0
        1:   19-block  2
        1:   19-block  3
        2:   19-block  4
        -:   20:}
        -:   21:
function analogInManager called 2 returned 100% blocks executed 100%
        2:   22:void analogInManager(message_t json){
        2:   22-block  0
        2:   23:    int inputNum = getInputNumber(json);
        2:   23-block  0
call    0 returned 2
        2:   24:    int receivedData = readAdc(inputNum);
call    0 returned 2
        -:   25:
        -:   26:    char str2send[100];
        2:   27:    bool isValid = analogValidate(receivedData);
call    0 returned 2
        2:   28:    message_t msg = sendAnalogInMessage(str2send, inputNum, receivedData, isValid);
call    0 returned 2
        -:   29:
        2:   30:    ETHsendMessage(msg);
call    0 returned 2
        2:   31:}
